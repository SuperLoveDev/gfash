generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model images {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  file_id String
  url     String
  userId  String? @unique @db.ObjectId
  shopId  String?  @unique @db.ObjectId
  users   users?  @relation(fields: [userId], references: [id])
  shops shops? @relation(fields: [shopId], references: [id])
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String?
  following String[]
  avatar    images?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shopReviews shopsReviews[]
}

model shopsReviews {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user users @relation(fields: [userId], references: [id])
  rating Float
  reviews String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  shopId String? @db.ObjectId
  shops shops? @relation(fields: [shopId], references: [id])
}

model shops {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  bio String?
  category String
  avatar images? 
  coverBanner String?
  address String
  shop_contact String
  opening_hours String?
  website String?
  socialLinks Json[]
  ratings Float @default(0)
  reviews shopsReviews[]
  sellerId String @unique @db.ObjectId
  sellers sellers @relation(fields: [sellerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model sellers {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  phone_number String
  country String
  password String?
  stripeId String?
  shop shops?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}